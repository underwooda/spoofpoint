#!/usr/bin/env bash

green="\e[32m"
nocolor="\e[0m"
cyan="\e[36m"
red='\033[0;31m'
yellow='\033[1;33m'
newline="--------------"
echo -e "${cyan}

 _____                    ________     _       _   
/  ___|                  / _| ___ \   (_)     | |  
\ \`--. _ __   ___   ___ | |_| |_/ /__  _ _ __ | |_ 
 \`--. \ '_ \ / _ \ / _ \|  _|  __/ _ \| | '_ \| __|
/\__/ / |_) | (_) | (_) | | | | | (_) | | | | | |_ 
\____/| .__/ \___/ \___/|_| \_|  \___/|_|_| |_|\__|
      | |                                          
      |_|                                          
--------------------------------------------------------------
${nocolor}
"

domain=""
input=""
generateDomain=""
specialChars=(o l i m)
createoutput=0

while getopts d:i:g:o: flag
do 
    case "${flag}" in 
        d) domain=${OPTARG};;
        i) input=${OPTARG};;
        g) generateDomain=${OPTARG};;
        o) outputfile=${OPTARG};;
        *) echo "Error, please use -d <singleDomain> or -i <inputList>" && exit 1 ;;
    esac
done

#Grab TLD before stripping
tld=$(echo "$generateDomain" | cut -d "." -f2)

#Check if there is no input
if [ $# -eq 0 ]; then
    echo 'Please use -d <Domain>'
    exit 1
fi

if [ -n "$outputfile" ]; then
        createoutput=1
    fi

var=0
# Replace o with 0
if [ -n "$generateDomain" ]; then
        generateDomainStripped=${generateDomain%%.*}
        gen=($(echo $generateDomainStripped|sed 's/\(.\)/\1 /g'))
        for i in "${gen[@]}"
        do 
            if [[ " $i " =~ ${specialChars[0]} ]]; then 
                var=$((var+1))
                echo ${gen[@]} | sed "s/$i/0/$var" | tr -d ' ' >> $generateDomainStripped.txt

            fi
        done
# Replace l with I 
var=0
        for i in "${gen[@]}"
        do
            if [[ " $i " =~ ${specialChars[1]} ]]; then 
                var=$((var+1))
                echo ${gen[@]} | sed "s/$i/"1"/$var" | tr -d ' ' >> $generateDomainStripped.txt
            fi 
        done
# Replace i with l 
var=0
        for i in "${gen[@]}"
        do
            if [[ " $i " =~ ${specialChars[2]} ]]; then 
                var=$((var+1))
                echo ${gen[@]} | sed "s/$i/"l"/$var" | tr -d ' ' >>  $generateDomainStripped.txt

            fi 
        done
# Replace m  with nn 
var=0
        for i in "${gen[@]}"
        do
            if [[ " $i " =~ ${specialChars[3]} ]]; then 
                var=$((var+1))
                echo ${gen[@]} | sed "s/$i/"nn"/$var" | tr -d ' ' >>  $generateDomainStripped.txt
            fi 
        done
            sed -i -e "s/$/.$tld/" $generateDomainStripped.txt
            echo -e "${cyan}Generating domains close to $generateDomain and checking to see if they've been registered${nocolor}"
            input="$generateDomainStripped.txt"
            echo -e "${yellow}Saved generated domains to $generateDomainStripped.txt"
fi

# Check if single domain exists
if [ -n "$domain" ]; then
    whois "$domain" | head | grep "Domain Name" > /dev/null 2>&1
    if [ $? == 0 ]; then
        echo -e "\n${red}$newline $domain exists$newline${nocolor}"
        whois "$domain" | head -n 15 
        dig "$domain" mx | grep -U2 ";; ANSWER" > /dev/null 2>&1
        if [ $? == 0 ]; then
            echo -e "${yellow}This domain has MX records set up!\n${nocolor}"
        else
            echo -e "${yellow}This domain does not have MX records set up${nocolor}"
        fi
        exit 0
    fi 
    echo "Domain does not exist"
    exit 0
fi

# Check entire input list & output to specified file
if [[ -n "$input" && $createoutput -gt 0 ]]; then
    echo -e "\nDomain checks from $input being written to $outputfile...\n"
    while IFS= read -r line; do
        whois "$line" | head | grep "Domain Name" > /dev/null 2>&1
        if [ $? == 0 ]; then
            echo -e "\n${red}$newline $line exists$newline${nocolor}" >> $outputfile
            whois "$line" | head -n 15 >> $outputfile
            dig "$line" mx | grep -U2 ";; ANSWER" > /dev/null 2>&1
            if [ $? == 0 ]; then
                echo -e "This domain has MX records set up!" >> $outputfile
            else
                echo -e "This domain does not have MX records set up" >> $outputfile
            fi
        else
            echo -e "$line is not a valid domain! \xE2\x9C\x94 " >> $outputfile
        fi
    done < "$input"
fi
# Check entire input list & output to terminal
if [[ -n "$input" && $createoutput -eq 0 ]]; then
        while IFS= read -r line; do
        whois "$line" | head | grep "Domain Name" > /dev/null 2>&1
        if [ $? == 0 ]; then
            echo -e "\n${red}$newline $line exists$newline${nocolor}"
            whois "$line" | head -n 15 
            dig "$line" mx | grep -U2 ";; ANSWER" > /dev/null 2>&1
            if [ $? == 0 ]; then
                echo -e "${yellow}This domain has MX records set up!\n${nocolor}"
            else
                echo -e "${yellow}This domain does not have MX records set up${nocolor}"
            fi
        else
            echo -e "${green}$line is not a valid domain! \xE2\x9C\x94 "
        fi    
    done < "$input"

fi